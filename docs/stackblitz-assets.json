{
  "examples": {
    "@dumlj-example/zip-webpack-plugin": [
      "@dumlj/zip-webpack-plugin",
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/vitrual-webpack-plugin"
    ],
    "@dumlj-example/stackblitz-webpack-plugin": [
      "@dumlj/stackblitz-webpack-plugin",
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/vitrual-webpack-plugin"
    ],
    "@dumlj-example/seed-webpack-plugin": [
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/vitrual-webpack-plugin"
    ],
    "@dumlj-example/pretty-assets-tree-webpack-plugin": [
      "@dumlj/vitrual-webpack-plugin",
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/pretty-assets-tree-webpack-plugin"
    ],
    "@dumlj-example/dts-webpack-plugin": [
      "@dumlj/dts-webpack-plugin",
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/pretty-assets-tree-webpack-plugin"
    ],
    "@dumlj-example/crx-manifest-webpack-plugin": [
      "@dumlj/crx-manifest-webpack-plugin",
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/feature-pretty",
      "@dumlj/vitrual-webpack-plugin"
    ],
    "@dumlj-example/crx-live-reload-webpack-plugin": [
      "@dumlj/crx-live-reload-webpack-plugin",
      "@dumlj/seed-webpack-plugin",
      "@dumlj/feature-updater",
      "@dumlj/shell-lib",
      "@dumlj/util-lib",
      "@dumlj/mock-lib",
      "@dumlj/vitrual-webpack-plugin"
    ]
  },
  "tarballs": [
    "@dumlj-example/zip-webpack-plugin.zip",
    "@dumlj-example/seed-webpack-plugin.zip",
    "@dumlj-example/pretty-assets-tree-webpack-plugin.zip",
    "@dumlj-example/crx-live-reload-webpack-plugin.zip",
    "@dumlj/zip-webpack-plugin.zip",
    "@dumlj/mock-lib.zip",
    "@dumlj/vitrual-webpack-plugin.zip",
    "@dumlj-example/stackblitz-webpack-plugin.zip",
    "@dumlj/pretty-assets-tree-webpack-plugin.zip",
    "@dumlj-example/crx-manifest-webpack-plugin.zip",
    "@dumlj/feature-pretty.zip",
    "@dumlj/seed-webpack-plugin.zip",
    "@dumlj/feature-updater.zip",
    "@dumlj/shell-lib.zip",
    "@dumlj/util-lib.zip",
    "@dumlj/stackblitz-webpack-plugin.zip",
    "@dumlj/crx-manifest-webpack-plugin.zip",
    "@dumlj-example/dts-webpack-plugin.zip",
    "@dumlj/crx-live-reload-webpack-plugin.zip",
    "@dumlj/dts-webpack-plugin.zip"
  ],
  "extras": [
    [
      "package.json",
      "{\n  \"name\": \"dumlj-build\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"description\": \"something build utilities\",\n  \"license\": \"MIT\",\n  \"workspaces\": {\n    \"packages\": [\n      \"@lib/*\",\n      \"@feature/*\",\n      \"@webpack-plugin/*\",\n      \"@vite-plugin/*\",\n      \"@dumi-plugin/*\",\n      \"@cli/*\",\n      \"@*/*/__example__\"\n    ]\n  },\n  \"scripts\": {\n    \"commit\": \"git-cz\",\n    \"ci:pages\": \"shx rm -rf ./gh-pages && mkdir -p ./gh-pages && shx cp -rf ./coverage ./gh-pages/coverage && dumi build\",\n    \"ci:coverage\": \"yarn compile && yarn test\",\n    \"ci:build\": \"yarn compile\",\n    \"preinstall\": \"node ./scripts/preinstall\",\n    \"postinstall\": \"node ./scripts/postinstall\",\n    \"clear\": \"rimraf ./@*/*/{libs,build,*.tsbuildinfo,tsconfig.build.json} tsconfig.build.json\",\n    \"format\": \"prettier --config .prettierrc.js --write \\\"**/*.{js,jsx,ts,tsx,d.ts,vue,md,json,yml,yaml}\\\"\",\n    \"lint\": \"yarn lint:ts\",\n    \"lint:ts\": \"eslint --config .eslintrc.js --ext .ts,.tsx --fix .\",\n    \"tidy\": \"dumlj concurrently \\\"tscfg --exclude **/__example__\\\" \\\"deps --ignore .templaterc.ts\\\"\",\n    \"readme\": \"dumlj readme --exclude **/__example__\",\n    \"compile\": \"tsc --build ./tsconfig.build.json\",\n    \"test\": \"jest -c ./jest.config.ts --coverage --reporters=default --reporters=jest-junit\",\n    \"docs:dev\": \"rm -rf .dumi && rm -rf node_modules/.cache && dumi dev\",\n    \"dev\": \"jest -c ./jest.config.ts --watch\",\n    \"ok\": \"yarn tidy && yarn compile && yarn lint && yarn test && yarn readme && yarn format\"\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^17.4.0\",\n    \"@commitlint/config-conventional\": \"^17.4.0\",\n    \"@jest/types\": \"^29.6.3\",\n    \"@swc/helpers\": \"^0.5.3\",\n    \"@tsd/typescript\": \"^5.2.2\",\n    \"@types/jest\": \"^29.5.7\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.9.1\",\n    \"@typescript-eslint/parser\": \"^6.9.1\",\n    \"commitizen\": \"^4.2.4\",\n    \"commitlint-plugin-i18n\": \"^0.0.1-alpha.3\",\n    \"concurrently\": \"^8.2.2\",\n    \"cz-customizable\": \"^7.0.0\",\n    \"cz-customizable-i18n-config\": \"^0.0.1-alpha.2\",\n    \"dumi\": \"^2.2.14\",\n    \"eslint\": \"^8.52.0\",\n    \"eslint-config-prettier\": \"^9.0.0\",\n    \"eslint-plugin-import\": \"^2.29.0\",\n    \"eslint-plugin-prettier\": \"^5.0.1\",\n    \"eslint-plugin-react-hooks\": \"^4.4.0\",\n    \"fs-extra\": \"^11.1.0\",\n    \"husky\": \"^8.0.3\",\n    \"jest\": \"^29.7.0\",\n    \"jest-cli\": \"^29.7.0\",\n    \"jest-junit\": \"^16.0.0\",\n    \"jest-puppeteer\": \"^9.0.1\",\n    \"jest-runner-tsd\": \"^6.0.0\",\n    \"lerna\": \"^7.4.2\",\n    \"lint-staged\": \"^14.0.1\",\n    \"prettier\": \"^3.0.3\",\n    \"puppeteer\": \"^21.4.1\",\n    \"rimraf\": \"^5.0.5\",\n    \"shx\": \"^0.3.4\",\n    \"spinnies\": \"^0.5.1\",\n    \"ts-jest\": \"^29.1.1\",\n    \"ts-node\": \"^10.9.1\",\n    \"ts-patch\": \"^3.0.2\",\n    \"tsd-lite\": \"^0.8.0\",\n    \"tslib\": \"^2.6.2\",\n    \"typescript\": \"^5.2.2\",\n    \"typescript-transform-paths\": \"^3.4.6\",\n    \"utility-types\": \"^3.10.0\"\n  }\n}\n"
    ],
    [
      "tsconfig.json",
      "{\n  \"ts-node\": {\n    \"swc\": true,\n    \"transpileOnly\": true,\n    \"compilerOptions\": {\n      \"module\": \"commonjs\"\n    }\n  },\n  \"compilerOptions\": {\n    // 增量编译\n    // \"incremental\": true,\n    /* 基本选项 */\n    \"target\": \"ES2015\",\n    // 模块类型\n    \"module\": \"commonjs\",\n    // 指定要包含在编译中的库文件\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    // 允许导入 JS 文件\n    \"allowJs\": true,\n    // 检测 JS 文件\n    \"checkJs\": false,\n    // 指定 jsx 代码的生成\n    \"jsx\": \"react\",\n    // 导出 d.ts 文件\n    \"declaration\": false,\n    // 生成 sourceMap\n    \"sourceMap\": true,\n    // 删除注释\n    \"removeComments\": false,\n    // 不生成输出文件\n    \"noEmit\": false,\n    // 从 tslib 导入辅助工具函数\n    \"importHelpers\": true,\n    // 将每个文件作为单独的模块\n    \"isolatedModules\": false,\n\n    /* 严格的类型检查选项 */\n    \"strict\": false,\n    // 在表达式和声明上有隐含的 any类型时报错\n    \"noImplicitAny\": false,\n    // 启用严格的 null 检查\n    \"strictNullChecks\": false,\n    // 当 this 表达式值为 any 类型的时候，生成一个错误\n    \"noImplicitThis\": true,\n    // 以严格模式检查每个模块，并在每个文件里加入 'use strict'\n    \"alwaysStrict\": true,\n    // 跳过 node_module 检测\n    \"skipLibCheck\": true,\n\n    /* 额外的检查 */\n    // 有未使用的变量时，抛出错误\n    \"noUnusedLocals\": false,\n    // 有未使用的参数时，抛出错误\n    \"noUnusedParameters\": false,\n    // 并不是所有函数里的代码都有返回值时，抛出错误\n    \"noImplicitReturns\": false,\n    // 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）\n    \"noFallthroughCasesInSwitch\": false,\n\n    /* 模块解析选项 */\n    // 模块解析策略\n    \"moduleResolution\": \"node\",\n    \"rootDir\": \".\",\n    // 用于解析非相对模块名称的基目录\n    \"baseUrl\": \".\",\n    // 模块名到基于 baseUrl 的路径映射的列表\n    \"paths\": {},\n    // 根文件夹列表，其组合内容表示项目运行时的结构内容\n    \"rootDirs\": [],\n    // 包含类型声明的文件列表\n    \"typeRoots\": [\"./node_modules/@types\"],\n    // 需要包含的类型声明文件名列表(为空会忽略声明文件)\n    // \"types\": [],\n    // 允许从没有设置默认导出的模块中默认导入\n    \"allowSyntheticDefaultImports\": true,\n    // 支持使用 import foo from 'bar' 的方式引入 commonjs 包\n    \"esModuleInterop\": true,\n    // 支持读取 JSON 文件\n    \"resolveJsonModule\": true,\n    // 强制区分文件名大小写\n    \"forceConsistentCasingInFileNames\": true,\n\n    /* Source Map Options */\n    // 指定调试器应该找到 TypeScript 文件而不是源文件的位置\n    // \"sourceRoot\": \"./\",\n    // 指定调试器应该找到映射文件而不是生成文件的位置\n    // \"mapRoot\": \"./\",\n    // 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件\n    \"inlineSourceMap\": false,\n    // 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性\n    \"inlineSources\": false,\n\n    /* 其他选项 */\n    // 启用装饰器\n    \"experimentalDecorators\": true,\n    // 为装饰器提供元数据的支持\n    \"emitDecoratorMetadata\": true,\n    // 插件\n    \"plugins\": [\n      // 路径别名，编译成 .js\n      {\n        \"transform\": \"typescript-transform-paths\",\n        \"useRootDirs\": true,\n        \"exclude\": [\"**/node_modules/**\"]\n      },\n      // 路径别名，编译成 .d.ts\n      {\n        \"transform\": \"typescript-transform-paths\",\n        \"useRootDirs\": true,\n        \"afterDeclarations\": true,\n        \"exclude\": [\"**/node_modules/**\"]\n      }\n    ]\n  },\n  // 包含文件\n  \"include\": [\"**/*.ts\", \"**/*.tsx\", \"**/*.d.ts\", \"./typings/**/*.d.ts\", \"**/.templaterc.ts\", \"**/.readmerc.ts\", \"**/.dumirc.ts\"],\n  // 排除文件\n  \"exclude\": [\"node_modules\", \"./libs\"]\n}\n"
    ]
  ],
  "isWorkspace": true
}