#!/usr/bin/env node

;(async function main () {
  const fs = require('fs')
  const { exec } = require('child_process')
  const tasks = ['ts-patch install -s']
  
  if (fs.existsSync('tsconfig.build.json')) {
    tasks.push('tsc --build ./tsconfig.build.json')
  } else {
    tasks.push(...[
      'lerna run compile --parallel --include-dependencies --scope=@dumlj/tidy-cli --scope=@dumlj/create-cli',
      'dumlj install husky',
      'dumlj concurrently \"tscfg --exclude \"**/__template__\" --exclude \"**/__example__\"\" \"deps --exclude \"**/__template__\"\"',
    ])
  }

  /** @todo 后续优化输出样式 */

  const Spinnies = require('spinnies')
  const spinnies = new Spinnies()
  
  while (tasks.length > 0) {
    const command = tasks.shift()
    spinnies.add(command, { text: command })
  
    try {
      await new Promise((resolve) => {
        const cp = exec(command, {
          stdio: 'inherit',
          env: {
            ...process.env,
            FORCE_COLOR: true
          }
        })

        if (-1 !== process.argv.indexOf('--verbose')) {
          cp.stdout.pipe(process.stdout)
        }

        cp.on('exit', () => resolve())
      })
    } catch (error) {
      spinnies.fail(command, { text: error.message })
      return
    }
  
    spinnies.succeed(command)
  }
})()
